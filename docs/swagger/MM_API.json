{
  "openapi": "3.0.0",
  "info": {
    "title": "Micronets Manager API's",
    "description": "Micronets Manager API's",
    "version": "0.1.1"
  },
  "paths": {
    "/registry": {
      "post": {
        "tags": [
          "registry"
        ],
        "summary": "Associated registry for each subscriber/user.",
        "operationId": "addRegistry",
        "requestBody": {
          "$ref": "#/components/requestBodies/RegistryBody"
        },
        "responses": {
          "201": {
            "description": "successful operation"
          }
        }
      }
    },
    "/registry/{subscriberId}": {
      "get": {
        "tags": [
          "registry"
        ],
        "summary": "Find registry by Subscriber ID",
        "description": "Returns registry associated with subscriber",
        "operationId": "getRegistryBySubscriberId",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Registry associated with subscriber to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registry"
                }
              }
            }
          },
          "400": {
            "description": "Invalid SubscriberID supplied"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "description": "Subscriber not found"
          }
        }
      },
      "delete": {
        "tags": [
          "registry"
        ],
        "summary": "Deletes a registry for associated subscriber",
        "description": "",
        "operationId": "deleteRegistry",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Registry to delete with associated subscriberId."
          }
        ],
        "responses": {
          "204": {
            "description": "Content Deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Registry not found"
          }
        }
      }
    },
    "/subscriber/{subscriberId}/micronets": {
      "post": {
        "tags": [
          "micronets"
        ],
        "summary": "Request to create single / multiple micronets.",
        "operationId": "createMicronet",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Registry associated with subscriber to return"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MicronetsBody"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Micronets"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      },
      "get": {
        "tags": [
          "micronets"
        ],
        "summary": "Retreive information for all existing micronets",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Associated subscriber to return"
          }
        ],
        "operationId": "getMicronets",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Micronets"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Micronet not found"
          }
        }
      },
      "delete": {
        "tags": [
          "micronets"
        ],
        "summary": "Deletes all micronets",
        "description": "",
        "operationId": "deleteMicronets",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Associated subscriber to return"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Micronets"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Micronet not found"
          }
        }
      }
    },
    "/subscriber/{subscriberId}/micronets/{micronetId}": {
      "delete": {
        "tags": [
          "micronets"
        ],
        "summary": "Deletes a micronet with micronetId",
        "description": "",
        "operationId": "deleteMicronet",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Associated subscriber to return"
          },
          {
            "in": "path",
            "name": "micronetId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID associated with micronet to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Micronets"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Micronet not found"
          }
        }
      },
      "get": {
        "tags": [
          "micronets"
        ],
        "summary": "Retreive information for specific micronet",
        "description": "",
        "operationId": "getMicronetById",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Associated subscriber to return"
          },
          {
            "in": "path",
            "name": "micronetId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Retrieve information for specific micronet with associated micronetId."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Micronets"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Micronet not found"
          }
        }
      }
    },
    "/subscriber/{subscriberId}/micronets/{micronetId}/devices": {
      "post": {
        "tags": [
          "micronets"
        ],
        "summary": "Request to add devices in a micronet.",
        "description": "",
        "operationId": "createDeviceInMicronet",
        "parameters": [
          {
            "in": "path",
            "name": "subscriberId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Associated subscriber to return"
          },
          {
            "in": "path",
            "name": "micronetId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Micronet to add device to"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/MicronetsDeviceBody"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Micronets"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create user",
        "operationId": "createUsers",
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBody"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get user information associated with userId",
        "description": "User information associated with ID.",
        "operationId": "getUsersById",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Retreive information for specific user with associated userId."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user information associated with userId",
        "description": "User information associated with ID.",
        "operationId": "deleteUsersById",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Retreive information for specific user with associated userId."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/odl/{gatewayId}": {
      "get": {
        "tags": [
          "odl"
        ],
        "summary": "Get switch config information associated with gateway",
        "operationId": "getOdlById",
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Retreive information for specific switch  with associated gateway."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Odl"
                }
              }
            }
          }
        }
      }
    },
    "/odl": {
      "post": {
        "tags": [
          "odl"
        ],
        "summary": "Create switch config information associated with gateway",
        "description": "Get switch config information associated with gateway",
        "operationId": "createOdl",
        "requestBody": {
          "$ref": "#/components/requestBodies/OdlBody"
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Odl"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Registry": {
        "type": "object",
        "required": [
          "subscriberId",
          "identityUrl",
          "mmUrl",
          "mmClientUrl",
          "webSocketUrl",
          "msoPortalUrl",
          "gatewayId"
        ],
        "properties": {
          "subscriberId": {
            "type": "string",
            "example": "7B2A-BE88-08817Z"
          },
          "identityUrl": {
            "type": "string",
            "example": "http://198.58.114.200:3230"
          },
          "dhcpUrl": {
            "type": "string",
            "example": "http://127.0.0.1:5000"
          },
          "mmUrl": {
            "type": "string",
            "example": "http://45.56.76.21:3030"
          },
          "mmClientUrl": {
            "type": "string",
            "example": "http://45.56.76.21:8080"
          },
          "webSocketUrl": {
            "type": "string",
            "example": "wss://ws-proxy-api.micronets.in:5050/micronets/v1/ws-proxy/auntbetty-gw"
          },
          "msoPortalUrl": {
            "type": "string",
            "example": "http://45.79.13.192:3210"
          },
          "odlUrl": {
            "type": "string",
            "example": "http://127.0.0.1:18080"
          },
          "gatewayId": {
            "type": "string",
            "example": "auntbetty-gw"
          }
        },
        "xml": {
          "name": "Registry"
        }
      },
      "Micronets": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "7B2A-BE88-08817Z"
              },
              "name": {
                "type": "string",
                "example": "Grandma’s LINKSYS 1900"
              },
              "ssid": {
                "type": "string",
                "example": "Grandma"
              },
              "micronets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Medical"
                    },
                    "micronet-subnet-id": {
                      "type": "string",
                      "example": "Medical"
                    },
                    "trunk-gateway-port": {
                      "type": "string",
                      "example": "2"
                    },
                    "trunk-gateway-ip": {
                      "type": "string",
                      "example": "10.36.32.121"
                    },
                    "dhcp-server-port": {
                      "type": "string",
                      "example": "LOCAL"
                    },
                    "dhcp-zone": {
                      "type": "string",
                      "example": "192.168.252.0/24"
                    },
                    "ovs-bridge-name": {
                      "type": "string",
                      "example": "brmn001"
                    },
                    "ovs-manager-ip": {
                      "type": "string",
                      "example": "10.36.32.121"
                    },
                    "micronet-subnet": {
                      "type": "string",
                      "example": "192.168.252.0/24"
                    },
                    "micronet-gateway-ip": {
                      "type": "string",
                      "example": "192.168.252.1"
                    },
                    "class": {
                      "type": "string",
                      "example": "Medical"
                    },
                    "micronet-id": {
                      "type": "string",
                      "example": "1987357293"
                    },
                    "connected-devices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device-mac": {
                            "type": "string",
                            "example": "B8:27:EB:D8:DF:30"
                          },
                          "device-name": {
                            "type": "string",
                            "example": "ProtoMed 1"
                          },
                          "device-id": {
                            "type": "string",
                            "example": "sdfew32123"
                          },
                          "device-openflow-port": {
                            "type": "string",
                            "example": "2"
                          },
                          "device-ip": {
                            "type": "string",
                            "example": "192.168.252.2"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "9XE3-JI34-00132A"
          },
          "name": {
            "type": "string",
            "example": "Grandma"
          },
          "ssid": {
            "type": "string",
            "example": "Grandma's WiFi"
          },
          "devices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "isRegistered": {
                  "type": "boolean"
                },
                "clientId": {
                  "type": "string",
                  "example": "https://kaiser-healthcare.org/"
                },
                "deviceId": {
                  "type": "string",
                  "example": "y2h0y79789yt1y248wf4pa495991b7852q989"
                },
                "macAddress": {
                  "type": "string",
                  "example": "72:77:42:ge:1r:94"
                },
                "class": {
                  "type": "string",
                  "example": "Medical"
                }
              }
            }
          }
        }
      },
      "Odl": {
        "type": "object",
        "properties": {
          "gatewayId": {
            "type": "string",
            "example": "grandma-gw"
          },
          "hwModelId": {
            "type": "string",
            "example": "123456-789"
          },
          "ovsVersion": {
            "type": "string",
            "example": "2.9.2"
          },
          "ovsPort": {
            "type": "string",
            "example": "8181"
          },
          "switchConfig": {
            "type": "object",
            "properties": {
              "bridges": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "brmn001"
                    },
                    "macAddress": {
                      "type": "string",
                      "example": "80:ee:73:d9:dc:3f"
                    },
                    "trunkIp": {
                      "type": "string",
                      "example": "192.168.250.0/24"
                    },
                    "trunkPort": {
                      "type": "string",
                      "example": "2"
                    },
                    "ports": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "port": {
                            "type": "string",
                            "example": "3"
                          },
                          "interface": {
                            "type": "string",
                            "example": "enp0s31f6"
                          },
                          "hwtype": {
                            "type": "string",
                            "example": "wired"
                          },
                          "subnet": {
                            "type": "string",
                            "example": "192.168.250.0/24"
                          },
                          "macAddress": {
                            "type": "string",
                            "example": "80:ee:73:d9:dc:3f"
                          },
                          "vlanId": {
                            "type": "string",
                            "example": "0"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "RegistryBody": {
        "description": "A JSON object containing registry information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Registry"
            }
          }
        }
      },
      "MicronetsBody": {
        "required": true,
        "description": "A JSON object containing micronets information",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "micronets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Heart Monitor"
                      },
                      "class": {
                        "type": "string",
                        "example": "Medical"
                      },
                      "micronet-subnet-id": {
                        "type": "string",
                        "example": "Medical"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MicronetsDeviceBody": {
        "description": "A JSON object containing information regarding adding a device",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "micronets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "connected-devices": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "device-mac": {
                              "type": "string",
                              "example": "B8:27:EB:D8:DF:30"
                            },
                            "device-name": {
                              "type": "string",
                              "example": "ProtoMed 1"
                            },
                            "device-id": {
                              "type": "string",
                              "example": "sdfew32123"
                            },
                            "device-openflow-port": {
                              "type": "string",
                              "example": "2"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UserBody": {
        "description": "A JSON object containing registry information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Users"
            }
          }
        }
      },
      "OdlBody": {
        "description": "A JSON object containing odl information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Odl"
            }
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    }
  }
}
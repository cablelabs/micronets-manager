version: '3'
services:
  mm-mongo:
     image: mongo
     environment:
           - SUBSCRIBER_ID=${SUBSCRIBER_ID}
           - NODE_ENV=development
           - PORT=3030
           - NETWORK_MODE=false
     container_name: mm-mongo-${SUBSCRIBER_ID}
     hostname: mm-mongo-${SUBSCRIBER_ID}
     volumes:
       - /private/tmp/mm-mongo-${SUBSCRIBER_ID}:/data/db
     command: mongod --port 27018
     ports:
       - "27018:27018"
  mm-api:
    build:
      context: ./../..
      dockerfile: docker/dev/Dockerfile.api
    container_name: micronets-manager-api-dev-${SUBSCRIBER_ID}
    hostname: micronets-manager-api-dev-${SUBSCRIBER_ID}
    image: micronets-manager-api-dev
    env_file:
        - ./../../.env
    environment:
      - SUBSCRIBER_ID=${SUBSCRIBER_ID}
      - NODE_ENV=development
      - PORT=3030
      - NETWORK_MODE=false
    depends_on:
      - mm-mongo
    ports:
      - '3030:3030'

  mm-app:
    build:
      context: ./../..
      dockerfile: docker/dev/Dockerfile.app
    container_name: micronets-manager-client-dev-${SUBSCRIBER_ID}
    hostname: micronets-manager-client-dev-${SUBSCRIBER_ID}
    image: micronets-manager-client-dev
    env_file:
       - ./../../.env
    environment:
      - SUBSCRIBER_ID=${SUBSCRIBER_ID}
      - NODE_ENV=development
      - PORT=8080
      - NETWORK_MODE=false
    depends_on:
      - mm-mongo
      - mm-api
    ports:
      - '8080:8080'

networks:
  default:
   external:
         name: micronets-dev

